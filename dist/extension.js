(()=>{"use strict";var e={112:function(e,t,o){var i=this&&this.__awaiter||function(e,t,o,i){return new(o||(o=Promise))((function(n,s){function r(e){try{l(i.next(e))}catch(e){s(e)}}function a(e){try{l(i.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(r,a)}l((i=i.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.activate=t.executeCommand=t.getwaitingMessage=void 0;const n=o(549),s=o(87).homedir(),r=o(747),a=o(129),l=o(306);let d;function c(e,t){return i(this,void 0,void 0,(function*(){return new Promise(((t,o)=>i(this,void 0,void 0,(function*(){let r="",d="";const c=yield a.exec(e,{cwd:`${s}\\.vscode\\extensions\\kunalburangi.kbur-seed-test-1-${l.version}\\dist`});n.window.withProgress({location:n.ProgressLocation.Notification,title:"Loading...",cancellable:!1},((e,t)=>(t.onCancellationRequested((()=>{c.kill(),o(new Error("Command  was cancelled"))})),new Promise(((t,o)=>i(this,void 0,void 0,(function*(){c.stdout.on("data",(t=>{r+=t,e.report({message:t.toString()})})),c.stderr.on("data",(e=>{d+=e})),c.on("close",(o=>{e.report({increment:100}),t({stdout:r,stderr:d,exitCode:o})})),c.on("error",(e=>{o(e)}))}))))))).then((()=>{n.window.showInformationMessage("Command has finished running"),t(r)})).catch((e=>{n.window.showErrorMessage(e.message),o(e)}))}))))}))}t.getwaitingMessage=function(e){return 1===e?"Please Wait this might take few minutes":2===e?"Installing packages...":3===e?"Setting up project":void 0},t.executeCommand=c,t.activate=function(e){e.subscriptions.push(n.commands.registerCommand("seed.templates",(()=>i(this,void 0,void 0,(function*(){let e=n.window.activeTerminal,t="";const o=yield n.window.showInputBox({value:"",valueSelection:[2,4],placeHolder:"Name of project",validateInput:e=>"123"===e?"Not 123!":null});if(o&&(d=yield n.window.showInputBox({value:"",valueSelection:[2,4],placeHolder:"Path of the directory where the project should get created. eg: C://temp",validateInput:e=>"123"===e?"Not 123!":null}),d)){const a=t=>i(this,void 0,void 0,(function*(){return new Promise((o=>{console.log(s),e=n.window.createTerminal({name:"Seed Project",hideFromUser:!1,cwd:`${s}\\.vscode\\extensions\\kunalburangi.kbur-seed-test-1-${l.version}`}),e.show(!0),null==e||e.sendText(t),setTimeout((()=>{o("true")}),5e3)}))}));r.existsSync(d)||c(`mkdir ${d}`),yield a("echo Seed Project is working for you!").then((()=>i(this,void 0,void 0,(function*(){let i,s=yield c("tmpo repository list ");s=s.split("\n"),yield n.window.showQuickPick(s,{placeHolder:"Select Repository",onDidSelectItem:e=>i=e.toString().toLowerCase()});let r=(yield c(`tmpo template list -r ${i}`)).split("\n");r[0].includes("New release found")&&(r=r.reverse(),r.pop()),yield n.window.showQuickPick(r,{placeHolder:`Select ${i} Repository`,onDidSelectItem:e=>t=e.toString().toLowerCase()}),o&&d&&i&&t&&(yield c(`echo y | tmpo --yes init ${o} -r ${i} -t ${t} -d ${d} --username . --email . --remote . `),yield a(`rm ${d}\\tmpo.exe`).catch((e=>{console.log(e.message)})),null==e||e.hide())})))).catch((e=>{console.log(e.message)}))}}))))),e.subscriptions.push(n.commands.registerCommand("seed.addrepository",(()=>i(this,void 0,void 0,(function*(){let e="",t="",o="",i="",s="",r="",a="",l="";if(d=yield n.window.showInputBox({value:"",valueSelection:[2,4],placeHolder:"Path of the directory where the project should get created. eg: C://temp",validateInput:e=>"123"===e?"Not 123!":null}),d)if(e="",t="",o="",i="",s="",r="",a="",l="",yield n.window.showQuickPick(["Remote","Directory"],{placeHolder:"Select Repository Type",ignoreFocusOut:!0}).then((t=>{t&&(e=t.toString().toLowerCase())})),e)if(e&&"remote"===e)if(yield n.window.showQuickPick(["Github","Gitlab"],{placeHolder:"Select Repository Source",ignoreFocusOut:!0}).then((e=>{e&&(t=e.toString().toLowerCase())})),t)if(yield n.window.showQuickPick(["Basic","None","Token"],{placeHolder:"Select Authentication Mode",ignoreFocusOut:!0}).then((e=>{e&&(o=e.toString().toLocaleLowerCase())})),o){if("basic"===o)return n.window.showErrorMessage("Basic  auth type is not yet supported!"),e="",t="",o="",i="",s="",r="",a="",void(l="");if(i=yield n.window.showInputBox({placeHolder:"Enter repository url ",ignoreFocusOut:!0,validateInput:e=>"123"===e?"Not 123!":null}),i){if(s=yield n.window.showInputBox({value:"",valueSelection:[2,4],placeHolder:"Enter branch name ",ignoreFocusOut:!0,validateInput:e=>"123"===e?"Not 123!":null}),s){if(r=yield n.window.showInputBox({value:"",valueSelection:[2,4],placeHolder:"Enter access token ",ignoreFocusOut:!0,validateInput:e=>"123"===e?"Not 123!":null}),!r&&"none"!==o)return void n.window.showErrorMessage("Access token is required if auth type is token");if(a=yield n.window.showInputBox({value:"",valueSelection:[2,4],placeHolder:"Enter repository name ",ignoreFocusOut:!0,validateInput:e=>"123"===e?"Not 123!":null}),a&&(l=yield n.window.showInputBox({value:"",valueSelection:[2,4],placeHolder:"Enter description ",ignoreFocusOut:!0,validateInput:e=>"123"===e?"Not 123!":null})),e&&t&&o&&i&&s&&a&&l){let n=`tmpo repository add -t ${e} -n ${a} -d ${l} --provider ${t} --authentication ${o} --url ${i} --branch ${s}`;n="token"===o?n+` --token ${r}`:n,yield c(n)}}}else n.window.showErrorMessage("Invalid repository url")}else n.window.showErrorMessage("Authentication Type is required!");else n.window.showErrorMessage("Repository provider is required!");else n.window.showErrorMessage("Repository Type Directory is not yet supported!");else n.window.showErrorMessage("Repository Type is required!");else n.window.showErrorMessage("Directory path is required!")})))))}},306:e=>{e.exports=JSON.parse('{"name":"kbur-seed-test-1","displayName":"Seed Projects","description":"","version":"1.0.0","engines":{"vscode":"^1.55.0"},"author":{"name":"Kunal Burangi","email":"kunal.burangi96@gmail.com"},"repository":{"type":"git","url":"https://github.com/KunalBurangi/seedProjectVscodeExtension.git"},"categories":["Other"],"activationEvents":["onCommand:seed.templates","onCommand:seed.addrepository"],"main":"./dist/extension.js","contributes":{"commands":[{"command":"seed.templates","title":"Seed Projects"},{"command":"seed.addrepository","title":"Seed Projects Add Repository"}]},"publisher":"KunalBurangi","scripts":{"vscode:prepublish":"npm run package","compile":"webpack  ","copy":"ls","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","test-compile":"tsc -p ./","test-watch":"tsc -watch -p ./","pretest":"npm run test-compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js","publish":"vsce publish"},"devDependencies":{"@types/glob":"^7.1.3","@types/mocha":"^8.0.4","@types/node":"^12.11.7","@types/vscode":"^1.55.0","@typescript-eslint/eslint-plugin":"^4.14.1","@typescript-eslint/parser":"^4.14.1","eslint":"^7.19.0","glob":"^7.1.6","mocha":"^8.2.1","ts-loader":"^8.0.14","typescript":"^4.1.3","vscode-test":"^1.5.0","webpack":"^5.19.0","webpack-cli":"^4.4.0"},"dependencies":{"file-loader":"^6.2.0"}}')},129:e=>{e.exports=require("child_process")},747:e=>{e.exports=require("fs")},87:e=>{e.exports=require("os")},549:e=>{e.exports=require("vscode")}},t={},o=function o(i){var n=t[i];if(void 0!==n)return n.exports;var s=t[i]={exports:{}};return e[i].call(s.exports,s,s.exports,o),s.exports}(112);module.exports=o})();